version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.7.0


workflows:
  build-test-deploy:
    jobs:
      # - build
      # - test:
      #     requires:
      #       - build
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          create-repo: true
          dockerfile: Dockerfile
          path: .
          region: AWS_REGION
          repo: aws-ecr-demo
          tag: "$CIRCLE_SHA1"
      #     requires:
      #       - test
      - deploy_to_staging
          # requires:
          #   - aws-ecr/build-and-push-image

configure_awscloud: &configure_awscloud
  run:
    name: configure awscloud default settings
    command: |
      aws configure

install_ansible: &install_ansible
  run:
    name: install ansible
    command: |
      apt-get update && apt-get install python3-pip -y
      pip3 install ansible openshift
      ansible --version

deploy_to_kubernetes: &deploy_to_kubernetes
  run:
    name: Run ansible playbook to configure kubernetes
    command: |
      export DEPLOYMENT_IMAGE=$AWS_ECR_ACCOUNT_URL/aws-ecr-demo:$(echo $CIRCLE_SHA1)
      ls
      pwd
      ansible-playbook ansible/main.yml -vvv


jobs:
  build:
    docker:
      - image: circleci/node:9.11.2-stretch
    steps:
      - checkout
      - run:
          name: install dependency
          command: |
            npm install --production

  test:
    docker:
      - image: circleci/node:9.11.2-stretch
    steps:
      - checkout
      - run:
          name: install dependency
          command: |
            npm install --production

  deploy_to_staging:
    docker:
      - image: ubuntu:18.04
    steps:
      - checkout
      - *install_ansible
      # - *configure_awscloud
      - *deploy_to_kubernetes

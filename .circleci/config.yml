version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.7.0


workflows:
  build-test-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          create-repo: true
          dockerfile: Dockerfile
          path: .
          region: AWS_REGION
          repo: staging
          tag: "$CIRCLE_SHA1"
          requires:
            - test
      - deploy_to_staging:
          requires:
            - aws-ecr/build-and-push-image

configure_awscli: &configure_awscli
  run:
    name: configure awscloud default settings
    command: |
      apt-get update && apt-get install -y curl unzip
      curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      unzip awscliv2.zip
      ./aws/install
      aws configure set region $AWS_REGION
      aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
      aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID

install_ansible: &install_ansible
  run:
    name: install ansible
    command: |
      apt-get update && apt-get install python3-pip curl unzip -y
      pip3 install ansible openshift

install_kubectl: &install_kubectl
  run:
    name: install kubectl
    command: |
      export DEBIAN_FRONTEND=noninteractive
      apt-get install -y apt-transport-https gnupg2 git-all
      curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
      echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | tee -a /etc/apt/sources.list.d/kubernetes.list
      apt-get update
      apt-get install -y gettext kubectl

deploy_to_kubernetes: &deploy_to_kubernetes
  run:
    name: Deploying kubernetes objects
    command: |
      # clone the deployment scripts repo here
      # git clone -b develop git@github.com:Tech-Talent/tech-talent-deployment-scripts.git
      # cd tech-talent-deployment-scripts
      export DEPLOYMENT_ENVIRONMENT=staging
      export BACK_END_PORT=3000
      aws eks --region $AWS_REGION update-kubeconfig --name staging
      envsubst < ./deploy-k8s/backend/deployment.yml.tpl > deployment.yml
      envsubst < ./deploy-k8s/backend/service.yml.tpl > service.yml
      envsubst < ./deploy-k8s/backend/autoscaler.yml.tpl > autoscaler.yml
      envsubst < ./deploy-k8s/shared/nginx-service.yml.tpl > nginx-service.yml
      kubectl apply -f deployment.yml
      kubectl apply -f service.yml
      kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v0.44.0/deploy/static/provider/aws/deploy.yaml
      kubectl apply -f nginx-service.yml
      kubectl apply -f autoscaler.yml


jobs:
  build:
    docker:
      - image: circleci/node:9.11.2-stretch
    steps:
      - checkout
      - run:
          name: install dependency
          command: |
            npm install --production

  test:
    docker:
      - image: circleci/node:9.11.2-stretch
    steps:
      - checkout
      - run:
          name: install dependency
          command: |
            npm install --production

  deploy_to_staging:
    docker:
      - image: ubuntu:18.04
    steps:
      - checkout
      # - *install_ansible
      - *configure_awscli
      - *install_kubectl
      - *deploy_to_kubernetes
